import React, { useState, useEffect } from 'react';
import { Loader, Card, FormField } from '../components';

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchedText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null); // Corrected variable name

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        });
  
        if (response.ok) {
          const responseData = await response.json();
          const { data } = responseData; // Access the 'data' property
          setAllPosts(data.reverse()); // Reverse the array of posts
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
  
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);
    const searchTextLowerCase = e.target.value.toLowerCase();
    const timeout = setTimeout(() => { // Corrected variable name
      const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchTextLowerCase));
      setSearchedResults(searchResults);
    }, 500);
    setSearchTimeout(timeout); // Update the search timeout
  };
  
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-3xl">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-base max-w-[500px]">
          Browse through a collection of imaginative and visually cool images generated by DALL-E AI
        </p>
        <div className="mt-16">
          <FormField
            labelName={'Search Posts'}
            type="text"
            name="search"
            placeholder="Search user posts"
            value={searchedText}
            handleChange={handleSearchChange}
          />
        </div>
        <div className="mt-10">
          {loading ? (
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ) : (
            <>
              {searchedText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                  Showing results for{' '}
                  <span className="text-[#222328]">{searchedText}</span>
                </h2>
              )}
              <div className="grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-3">
                {searchedText ? (
                  <RenderCards data={searchedResults} title="No searched results found" />
                ) : (
                  <RenderCards data={allPosts} title="No posts found" />
                )}
              </div>
            </>
          )}
        </div>
      </div>
    </section>
  );
};

export default Home;
